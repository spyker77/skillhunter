# ENVIRONMENT VARIABLES #
DJANGO_SECRET_KEY=UtSg_lbzZ1y_9GA67lGZS60YCvH7jnsunrv47vZc5L2vh43_WXk
ENVIRONMENT=production
DEBUG=False
DATABASE_URL=postgres://postgres:Lht80Wo7GiGvjnxDyFv6@skillhunter-ec2.cwnhzurhykoa.eu-central-1.rds.amazonaws.com:5432/skillhunter
REDIS_URL=redis://:TBi6Cf7rnZcafLJLotEglZKXl8cKajwn@redis-18080.c55.eu-central-1-1.ec2.cloud.redislabs.com:18080
SENTRY_DSN=https://9b7d4b0cf5de4fcb9b5dc0eb639ac51a@o512668.ingest.sentry.io/5613272
USE_S3=True
AWS_S3_REGION_NAME=eu-central-1
AWS_S3_CUSTOM_DOMAIN=d1vsklygrilypl.cloudfront.net
AWS_STORAGE_BUCKET_NAME=skillhunter-ec2
AWS_ACCESS_KEY_ID=AKIA3HIHZMNTGYTCHUTK
AWS_SECRET_ACCESS_KEY=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



# INSTALL DOCKER ON UBUNTU #
# https://docs.docker.com/engine/install/ubuntu/
# https://docs.docker.com/compose/cli-command/

# LOCAL DOCKER COMMANDS #
# aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 771499844454.dkr.ecr.eu-central-1.amazonaws.com
# docker compose -f docker-compose.prod.yml build
# docker compose -f docker-compose.prod.yml push

# EC2 DOCKER COMMANDS #
# aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 771499844454.dkr.ecr.eu-central-1.amazonaws.com
# docker pull 771499844454.dkr.ecr.eu-central-1.amazonaws.com/skillhunter-ec2:latest
# docker compose -f docker-compose.prod.yml up -d

# CLEANUP #
# docker images -a | grep none | awk '{ print $3; }' | xargs docker rmi && docker volume rm $(docker volume ls -qf dangling=true) && docker system prune -f



# CRON JOBS #
# 0 21 * * *      cd /home/ubuntu/skillhunter && docker compose exec web python manage.py purge_db
# 30 21 * * *     cd /home/ubuntu/skillhunter && docker compose exec web python manage.py scrape_hh
# 30 21 * * *     cd /home/ubuntu/skillhunter && docker compose exec web python manage.py scrape_sh
# 0 * * * *       cd /home/ubuntu/skillhunter && docker compose exec web python manage.py warmup_cache