name: CI/CD

on: [push]

env:
  BUILDER_IMAGE: ghcr.io/$(echo $GITHUB_ACTOR | tr '[A-Z]' '[a-z]')/builder

jobs:
  test:
    name: Test with Docker Compose
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and run containers
        run: docker-compose up -d --quiet-pull

      - name: Pytest
        run: docker-compose exec -T web pytest -n auto --cov="." --cov-report=xml

      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-deploy:
    name: Build Production Images and Deploy to Amazon ECR
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Packages
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull builder image from GitHub Packages
        run: docker pull ${{ env.BUILDER_IMAGE }}:latest || true

      - name: Refresh builder image
        run: DOCKER_BUILDKIT=1 docker build \
          --target builder \
          --platform linux/arm64 \
          --cache-from ${{ env.BUILDER_IMAGE }}:latest \
          --tag ${{ env.BUILDER_IMAGE }}:latest \
          --file ./Dockerfile.prod \
          "."

      - name: Push builder image to GitHub Packages
        run: docker push ${{ env.BUILDER_IMAGE }}:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag production images
        run: |
          DOCKER_BUILDKIT=1 docker build \
            --platform linux/arm64 \
            --cache-from ${{ env.BUILDER_IMAGE }}:latest \
            --tag ${{ steps.login-ecr.outputs.registry }}/skillhunter-ec2-web:latest \
            --file ./Dockerfile.prod \
            "."
          DOCKER_BUILDKIT=1 docker build \
            --platform linux/arm64 \
            --cache-from ${{ env.BUILDER_IMAGE }}:latest \
            --tag ${{ steps.login-ecr.outputs.registry }}/skillhunter-ec2-celery:latest \
            --file ./Dockerfile.prod \
            "."

      - name: Push production images to Amazon ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/skillhunter-ec2-web:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/skillhunter-ec2-celery:latest
